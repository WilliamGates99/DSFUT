plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33
    buildToolsVersion '33.0.0'

    defaultConfig {
        applicationId "com.xeniac.dsfut"
        minSdkVersion 21
        targetSdk 33
        versionCode 5 // TODO UPGRADE FOR RELEASE
        versionName "1.0.4" // TODO UPGRADE FOR RELEASE

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.core:core-splashscreen:1.0.0'

    // Navigation Component
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'

    // Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-compiler:2.44'

    // Activity KTX for Injecting ViewModels into Fragments
    implementation 'androidx.activity:activity-ktx:1.6.0'

    // Architectural Components
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.10'

    // Timber Library
    implementation 'com.jakewharton.timber:timber:5.0.1'

     // Local Unit Test Libraries
     testImplementation 'com.google.truth:truth:1.1.3'
     testImplementation 'junit:junit:4.13.2'

     // Instrumentation Test Libraries
     androidTestImplementation 'com.google.truth:truth:1.1.3'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

task copyReleaseApk(type: Copy) {
    def sourceDir = "${rootDir}/app/release/app-release.apk"
    def destDir = "D:\\01 My Files\\Projects\\Xeniac\\DSFUT\\APK"
    def versionName = "${android.defaultConfig.versionName}"

    from sourceDir
    into destDir

    rename "app-release.apk", "DSFUT ${versionName}.apk"
}

task copyReleaseBundle(type: Copy) {
    def sourceDir = "${rootDir}/app/release/app-release.aab"
    def destDir = "D:\\01 My Files\\Projects\\Xeniac\\DSFUT\\APK"
    def versionName = "${android.defaultConfig.versionName}"

    from sourceDir
    into destDir

    rename "app-release.aab", "DSFUT ${versionName}.aab"
}

task copyObfuscationFolder(type: Copy) {
    def sourceDir = "${rootDir}/app/obfuscation"
    def destDir = "D:\\01 My Files\\Projects\\Xeniac\\DSFUT\\APK\\obfuscation"

    from sourceDir
    into destDir
}

task copyReleaseFiles() {
    dependsOn("copyReleaseApk", "copyReleaseBundle", "copyObfuscationFolder")
}